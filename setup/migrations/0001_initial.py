# Generated by Django 4.1.6 on 2023-02-06 17:30

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='badges',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('user_id', models.IntegerField()),
                ('Class', models.SmallIntegerField()),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('tag_based', models.BooleanField(verbose_name='tag_based')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='date')),
            ],
        ),
        migrations.CreateModel(
            name='comments',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('post_id', models.IntegerField(verbose_name='post_id')),
                ('user_id', models.IntegerField(null=True, verbose_name='user_id')),
                ('score', models.SmallIntegerField(verbose_name='score')),
                ('content_license', models.CharField(max_length=64, verbose_name='content_license')),
                ('user_display_name', models.CharField(max_length=64, null=True, verbose_name=('user_display_name',))),
                ('text', models.TextField(null=True, verbose_name='text')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='creation_date')),
            ],
        ),
        migrations.CreateModel(
            name='post_history',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('post_id', models.IntegerField(verbose_name='post_id')),
                ('user_id', models.IntegerField(null=True, verbose_name='user_id')),
                ('post_history_type_id', models.SmallIntegerField(verbose_name='post_history_type_id')),
                ('user_display_name', models.CharField(max_length=64, null=True, verbose_name='user_display_name')),
                ('content_license', models.CharField(max_length=64, null=True, verbose_name='content_license')),
                ('revision_guid', models.UUIDField(verbose_name='revision_guid')),
                ('text', models.TextField(null=True, verbose_name='text')),
                ('comment', models.TextField(null=True, verbose_name='comment')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='creation_date')),
            ],
        ),
        migrations.CreateModel(
            name='post_links',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('related_post_id', models.IntegerField(verbose_name='related_post_id')),
                ('post_id', models.IntegerField(verbose_name='post_id')),
                ('link_type_id', models.SmallIntegerField(verbose_name='link_type_id')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='creation_date')),
            ],
        ),
        migrations.CreateModel(
            name='posts',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('owner_user_id', models.IntegerField(null=True, verbose_name='owner_user_id')),
                ('last_editor_user_id', models.IntegerField(null=True, verbose_name='last_editor_user_id')),
                ('post_type_id', models.SmallIntegerField(verbose_name='post_type_id')),
                ('accepted_answer_id', models.IntegerField(null=True, verbose_name='accepted_answer_id')),
                ('score', models.IntegerField(verbose_name='score')),
                ('parent_id', models.IntegerField(null=True, verbose_name='parent_id')),
                ('view_count', models.IntegerField(null=True, verbose_name='view_count')),
                ('answer_count', models.IntegerField(default=0, null=True, verbose_name='answer_count')),
                ('comment_count', models.IntegerField(default=0, verbose_name='comment_count')),
                ('owner_display_name', models.CharField(max_length=64, null=True, verbose_name='owner_display_name')),
                ('last_editor_display_name', models.CharField(max_length=64, null=True, verbose_name='last_editor_display_name')),
                ('title', models.CharField(max_length=512, null=True, verbose_name='title')),
                ('tags', models.CharField(max_length=512, null=True, verbose_name='tags')),
                ('content_license', models.CharField(max_length=64, verbose_name='content_license')),
                ('body', models.TextField(null=True, verbose_name='body')),
                ('favorite_count', models.IntegerField(null=True, verbose_name='favorite_count')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='creation_date')),
                ('community_owned_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='community_owned_date')),
                ('closed_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='closed_date')),
                ('last_edit_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='last_edit_date')),
                ('last_activity_date', models.DateTimeField(auto_now_add=True, verbose_name='last_activity_date')),
            ],
        ),
        migrations.CreateModel(
            name='tags',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('excerpt_post_id', models.IntegerField(null=True, verbose_name='excerpt_post_id')),
                ('wiki_post_id', models.IntegerField(null=True, verbose_name='wiki_post_id')),
                ('tag_name', models.CharField(max_length=255, verbose_name='tag_name')),
                ('count', models.IntegerField(default=0, verbose_name='count')),
            ],
        ),
        migrations.CreateModel(
            name='users',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('account_id', models.IntegerField(null=True, verbose_name='account_id')),
                ('reputation', models.IntegerField(verbose_name='reputation')),
                ('views', models.IntegerField(default=0, verbose_name='views')),
                ('down_votes', models.IntegerField(default=0, verbose_name='down_votes')),
                ('up_votes', models.IntegerField(default=0, verbose_name='up_votes')),
                ('display_name', models.CharField(max_length=255, verbose_name='display_name')),
                ('location', models.CharField(max_length=512, null=True, verbose_name='location')),
                ('profile_image_url', models.CharField(max_length=255, null=True, verbose_name='profile_image_url')),
                ('website_url', models.CharField(max_length=255, null=True, verbose_name='website_url')),
                ('about_me', models.TextField(null=True, verbose_name='about_me')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='creation_date')),
                ('last_access_date', models.DateTimeField(auto_now_add=True, verbose_name='last_access_date')),
            ],
        ),
        migrations.CreateModel(
            name='votes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('user_id', models.IntegerField(null=True, verbose_name='user_id')),
                ('post_id', models.IntegerField(verbose_name='post_id')),
                ('vote_type_id', models.SmallIntegerField(verbose_name='vote_type_id')),
                ('bounty_amount', models.SmallIntegerField(null=True, verbose_name='bounty_amount')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='creation_date')),
            ],
        ),
    ]
